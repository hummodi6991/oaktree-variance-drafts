# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - oaktree-variance-dev

on:
  push:
    branches:
      - main
  workflow_dispatch:
concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install dependencies
        run: pip install -r requirements.txt

      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            app/
            requirements.txt
            gunicorn.conf.py
            pyproject.toml

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout
    env:
      AZURE_WEBAPP_NAME: oaktree-variance-dev
      AZURE_RESOURCE_GROUP: oaktree-variance-dev-rg

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app
          path: ${{ github.workspace }}/python-app

      - name: Zip artifact for deploy
        shell: bash
        run: |
          cd "${{ github.workspace }}/python-app"
          zip -qry ../artifact.zip .

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Who am I in Azure?
        shell: bash
        run: |
          set -euo pipefail
          echo "== Account =="
          az account show --query "{name:name,id:id,tenantId:tenantId}" -o table
          echo "== Service principal behind AZURE_CLIENT_ID =="
          az ad sp show --id "${{ secrets.AZURE_CLIENT_ID }}" \
            --query "{displayName:displayName,appId:appId,objectId:id}" -o table

      - name: Validate Azure inputs
        shell: bash
        run: |
          set -euo pipefail
          for v in AZURE_WEBAPP_NAME AZURE_RESOURCE_GROUP; do
            if [ -z "${!v:-}" ]; then
              echo "::error::Missing $v"; exit 1
            fi
          done
          echo "Using RG=$AZURE_RESOURCE_GROUP, APP=$AZURE_WEBAPP_NAME"
          az group show -n "$AZURE_RESOURCE_GROUP" -o table
      - name: Deploy via Azure CLI (zip)
        shell: bash
        env:
          ZIP_PATH: artifact.zip
        run: |
          set -euo pipefail
          if [ ! -f "$ZIP_PATH" ]; then
            echo "::error::Zip artifact not found at $ZIP_PATH"; ls -la; exit 1
          fi
          echo "Deploying $ZIP_PATH to $AZURE_WEBAPP_NAME in $AZURE_RESOURCE_GROUP"
          az webapp deploy \
            --resource-group "$AZURE_RESOURCE_GROUP" \
            --name "$AZURE_WEBAPP_NAME" \
            --src-path "$ZIP_PATH" \
            --type zip \
            --async false \
            --restart true

