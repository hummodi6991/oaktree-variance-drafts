name: deploy
on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  deploy:
    runs-on: ubuntu-latest
    concurrency:
      group: deploy-${{ github.workflow }}-oaktree-variance-dev-${{ github.ref }}
      cancel-in-progress: true
    permissions:
      id-token: write
      contents: read
    env:
      AZURE_WEBAPP_NAME: oaktree-variance-dev
      AZURE_RESOURCE_GROUP: oaktree-variance-dev-rg

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create deployable source zip
        shell: bash
        run: |
          set -euo pipefail
          zip -r app.zip . \
            -x ".git/*" ".github/*" "*/__pycache__/*" "*.pyc" "node_modules/*"
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: app
          path: app.zip

      # Azure login with OIDC
      - name: Azure OIDC login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Who am I in Azure?
        shell: bash
        run: |
          set -euo pipefail
          echo "== Account =="
          az account show --query "{name:name,id:id,tenantId:tenantId}" -o table
          echo "== Service principal behind AZURE_CLIENT_ID =="
          az ad sp show --id "${{ secrets.AZURE_CLIENT_ID }}" \
            --query "{displayName:displayName,appId:appId,objectId:id}" -o table

      - name: Validate Azure inputs
        shell: bash
        run: |
          set -euo pipefail
          for v in AZURE_WEBAPP_NAME AZURE_RESOURCE_GROUP; do
            if [ -z "${!v:-}" ]; then
              echo "::error::Missing $v"; exit 1
            fi
          done
          echo "Using RG=$AZURE_RESOURCE_GROUP, APP=$AZURE_WEBAPP_NAME"
          az group show -n "$AZURE_RESOURCE_GROUP" -o table

      - name: AppService config for Python
        shell: bash
        run: |
          set -euo pipefail
          az webapp config set \
            --resource-group "$AZURE_RESOURCE_GROUP" \
            --name "$AZURE_WEBAPP_NAME" \
            --linux-fx-version "Python|3.11" \
            --always-on true
          az webapp config appsettings set \
            --resource-group "$AZURE_RESOURCE_GROUP" \
            --name "$AZURE_WEBAPP_NAME" \
            --settings SCM_DO_BUILD_DURING_DEPLOYMENT=true WEBSITE_RUN_FROM_PACKAGE=1
          az webapp config set \
            --resource-group "$AZURE_RESOURCE_GROUP" \
            --name "$AZURE_WEBAPP_NAME" \
            --startup-file ""
          az webapp log config \
            --resource-group "$AZURE_RESOURCE_GROUP" \
            --name "$AZURE_WEBAPP_NAME" \
            --application-logging filesystem \
            --web-server-logging filesystem \
            --level information
      - name: Deploy via Azure CLI (zip)
        shell: bash
        env:
          ZIP_PATH: ./app.zip
        run: |
          set -euo pipefail
          if [ ! -f "$ZIP_PATH" ]; then
            echo "::error::Zip artifact not found at $ZIP_PATH"; ls -la; exit 1
          fi
          # start log tail in background for up to 10 minutes
          ( az webapp log tail --resource-group "$AZURE_RESOURCE_GROUP" --name "$AZURE_WEBAPP_NAME" --timeout 600 || true ) &
          echo "Deploying $ZIP_PATH to $AZURE_WEBAPP_NAME in $AZURE_RESOURCE_GROUP"
          az webapp deploy \
            --resource-group "$AZURE_RESOURCE_GROUP" \
            --name "$AZURE_WEBAPP_NAME" \
            --src-path "$ZIP_PATH" \
            --type zip \
            --async false \
            --restart true
      - name: Wait for site & health check
        shell: bash
        env:
          APP_URL: https://oaktree-variance-dev.azurewebsites.net/
        run: |
          set -euo pipefail
          echo "Waiting for site to come up..."
          for i in {1..36}; do  # ~6 minutes
            code=$(curl -s -o /dev/null -w "%{http_code}" "$APP_URL" || true)
            if [ "$code" = "200" ] || [ "$code" = "302" ]; then
              echo "Site is up with HTTP $code"; exit 0
            fi
            echo "Still starting... ($i/36) HTTP $code"
            sleep 10
          done
          echo "::error::Site did not return 200/302 in time. Recent logs:"
          az webapp log tail \
            --resource-group "$AZURE_RESOURCE_GROUP" \
            --name "$AZURE_WEBAPP_NAME" \
            --timeout 120 || true
          exit 1
