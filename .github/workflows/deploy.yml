name: deploy
on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    env:
      RG: ${RG}
      APP: ${APP}
      API_PATH: ${API_PATH}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show backend contents
        run: |
          echo "Backend path: \$API_PATH"
          ls -la "\$API_PATH"

      # Only require requirements.txt so Oryx detects Python.
      - name: Validate backend layout
        run: |
          test -f "\$API_PATH/requirements.txt" || { echo "requirements.txt not found under \$API_PATH"; exit 1; }

      # Try to auto-detect a FastAPI module and prepare a startup command.
      - name: Detect FastAPI app and set startup command
        id: startup
        run: |
          set -e
          MOD_FILE="$(grep -RIl --include='*.py' 'FastAPI(' "\$API_PATH" | head -n1 || true)"
          if [ -n "\$MOD_FILE" ]; then
            MOD_NOEXT="${MOD_FILE%.py}"
            MOD_REL="${MOD_NOEXT#${API_PATH}/}"
            MOD="${MOD_REL//\//.}"
            CMD="gunicorn -k uvicorn.workers.UvicornWorker ${MOD}:app"
            echo "Detected module: ${MOD}"
            echo "STARTUP_CMD=${CMD}" >> "\$GITHUB_ENV"
          else
            echo "No FastAPI module auto-detected; leaving startup unchanged."
          fi

      - name: Build deployable artifact (zip root = backend)
        run: |
          cd "\$API_PATH"
          zip -r ../app.zip .
          cd -
          unzip -l app.zip | head -n 20

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy zip to Azure Web App
        run: |
          az webapp deploy \
            --resource-group "\$RG" \
            --name "\$APP" \
            --type zip \
            --src-path app.zip \
            --clean true

      - name: Apply startup command if detected
        if: env.STARTUP_CMD != ''
        run: |
          echo "Setting startup command: \$STARTUP_CMD"
          az webapp config set -g "\$RG" -n "\$APP" --startup-file "\$STARTUP_CMD"

      - name: Show site URL
        run: az webapp show -g "\$RG" -n "\$APP" --query defaultHostName -o tsv
